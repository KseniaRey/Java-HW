import java.util.Random;

/*
1) Сделать глобальный массив
2) Метод(функцию) для заполнения массива случайными числами
3) Метод для вывода массива на консоль  ---- (всего массива или только 15?)
4) Метод для поиска индекса значения  --> бинарный поиск? https://javarush.com/groups/posts/4065-kofe-breyk-205-100-naibolee-rasprostranennihkh-voprosov-na-sobesedovanii-po-java-dlja-razrabotc
5) Сортировка(пузырек)
*
* Список действий:
* 1.
* 2.
* 3.
* */
public class Main {
    static int[] arr; // создание глобального массива
//    static int index; --> все равно не подтягивается
    static Random random = new Random();  // рандомизатор псевдослучайных чисел

    public static void main(String[] args) {
        randomNumbers(); // вызов метода
        for (int i = 0; i < arr.length; i++) {  // вот почему это работает?? Выведи каждый элемент массива и добавь к нему пробел?
            System.out.println(arr[i] + " "); // --> можно ли обойтись без цикла?
        }
        int index = 5;
        int resultIndex = findIndex(arr, index); // почему не работает?
        System.out.println(resultIndex);
    }

    public static int randomNumbers() { // делаем метод для запушивания чисел в массив
        int max = 100; // указываем границы дозволенного
        int min = 0;   // продолжаем указывать границы дозволенного
        arr = new int[15]; // устанавливаем ограничение на кол-во символов? "Добавь 15 символов?"

        for (int i = 0; i < arr.length; i++) {
            arr[i] = random.nextInt(100); // --> вот эта штука добавляет только 1 число вместо 15. Почему?
            // починила, добавив в main цикл по выводу каждого элемента.
            // (уходит в бесконечную рекурсию. Как исправить?)--> (int) (Math.random() * 100);
        }
        return arr.length; // Покажи весь массив
        //(выведутся только 15 из-за строки arr = new int[15];)
    }

    // всегда нужно указывать тип массива - инт, дабл и тд?
    public static int findIndex(int[] arr, int index) { // объявляем переменную индекс? // не получается вызвать. переменные сделать статиками?
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == index) { // как заменить название во всех вхождениях?
                // а как может быть i == index, если индексация начитается с 0 и будет всегда отставать на 1?
                return i;
            }
        }
        return -1; // так, почему -1?  \\ ну вот он -1 и возвращает, все логично
    }

    /*
    * По задаче:
    * Что такое цикл с итератором s? Разве он не перебирает те же значения, что и итератор i?
    * Мы ведь копаемся в одном массиве и по сути просто берем каждый элемент каждой рукой по очереди. Как они могут быть не равны и как в
    * этом случае такая сортировка может быть правильной?
    * А, или все дело в условии if(array[i] < array[s])? Но тогда как это условие может быть верным, если мы опять же
    * берем один и тот же элемент?
     * */
    public static int[] bubbleArr(int [] array){            // BUBBLESORT:
        int temp;                                           // Объявляем временную переменную - третья рука, которой будем держать значение, пока копаемя в массиве
        for(int i = 0; i < array.length; i++){              // Цикл для перебода элементов массива
            for(int s = 0; s < array.length; i++){          // Второй цикл для перебора и сравнения
                if(array[i] < array[s]){                    // Условие
                    temp = array[i];                        // Если условие из пред строки верно, засунь во временную переменную temp каждый эл массива
                    array[i] = array[s];                    // Приравняй то, что лежит в array[i] --> так что там лежит, мы ж все в темп только что засунули?!
                    array[s] = temp;                        // И засунь все из array[s] в темп? Почему тогда значения не задваиваются? Почему это работает?
                }
            }
        }
        return array;
    }
}